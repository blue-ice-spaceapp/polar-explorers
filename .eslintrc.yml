---
root: true
parser: babel-eslint

extends:
    - eslint:recommended
    - plugin:import/errors
    - plugin:import/warnings

plugins:
    - react
    - jsx-control-statements
    - import
    - jest

settings:
    import/resolver: webpack  # take all defaults

env:
    es6: true
    node: true
    browser: true
    jest/globals: true

parserOptions:
    sourceType: module

globals:
    assert: true
    ReactRenderer: true
    __DEV__: true
    __PROD__: true
    __CLIENT__: true
    __SERVER__: true
    __REV__: true

rules:
    # 2 = errors (bugs)
    default-case: 2
    eol-last: [ 2, "always" ]
    eqeqeq: [ 2, "smart" ]
    no-eval: 2
    no-implied-eval: 2
    no-extend-native: 2
    no-irregular-whitespace: 2
    no-obj-calls: 2
    no-octal: 2
    no-proto: 2
    no-redeclare: 2
    no-return-await: 2
    no-throw-literal: 2
    no-undef: 0 # handled by jsx-control-statements/jsx-jcs-no-undef
    no-use-before-define: [ 2, { functions: false } ]
    no-var: 2
    no-with: 2
    radix: 2
    space-infix-ops: [ 2, { int32Hint: false } ]
    space-unary-ops: [ 2, { words: true, nonwords: false } ]
    use-isnan: 2
    wrap-iife: [ 2, "outside" ]
    yoda: 2

    # 1 = warnings (fugly code)
    array-bracket-spacing: [ 1, "always", { singleValue: true, objectsInArrays: false, arraysInArrays: false } ]
    arrow-spacing: 1
    comma-dangle: [ 1, "always-multiline" ]
    comma-spacing: [ 1, { before: false, after: true } ]
    func-call-spacing: [ 1, "never" ]
    func-style: [ 1, "declaration", { allowArrowFunctions: true } ]
    indent: [ 1, 4, { "SwitchCase": 0 } ]
    jsx-quotes: [ 1, "prefer-single" ]
    key-spacing: [ 1, { beforeColon: false, afterColon: true } ]
    keyword-spacing: 1
    linebreak-style: [ 1, "unix" ]
    no-extra-parens: [ 1, "all", { ignoreJSX: "all" } ]
    no-implicit-coercion: [ 1, { "boolean": false } ]
    no-multi-spaces: 1
    no-multiple-empty-lines: [ 1, { "max": 2, "maxEOF": 0 } ]
    no-trailing-spaces: 1
    no-unused-vars: [ 1, { argsIgnorePattern: "^_", varsIgnorePattern: "(^log$)|(^_.*)" } ]
    no-useless-return: 1
    object-curly-spacing: [ 1, "always" ]
    prefer-const: 1
    quotes: [ 1, "single", { avoidEscape: true, allowTemplateLiterals: true }]
    require-await: 1
    require-yield: 1
    rest-spread-spacing: [ 1, "never" ]
    semi: [ 1 , "never"]
    space-before-blocks: 1
    space-before-function-paren: [ 1, "always" ]
    spaced-comment: [ 1 , "always", { exceptions: ["*"], block: { balanced: true } } ]
    strict: 0
    template-curly-spacing: [ 1, "always" ]
    template-tag-spacing: [ 1, "never" ]

    import/default: 2
    import/export: 2
    import/named: 2
    import/namespace: 2
    import/no-absolute-path: 2
    import/no-duplicates: 0
    import/no-mutable-exports: 2
    import/no-unresolved: [ 2, { commonjs: true, amd: true } ]

    react/no-did-mount-set-state: 2
    react/no-did-update-set-state: 2
    react/no-direct-mutation-state: 2
    react/no-is-mounted: 2

    react/jsx-no-duplicate-props: 2
    react/jsx-uses-vars: 2
    react/no-deprecated: 2
    react/no-unknown-property: 2
    react/prefer-es6-class: [ 2, "always" ]
    react/jsx-closing-bracket-location: [ 1, "tag-aligned" ]
    react/jsx-curly-spacing: [ 1, "always", { spacing: { objectLiterals: "never" }} ]
    react/jsx-equals-spacing: [ 1, "never" ]
    react/jsx-indent-props: [ 1, 4 ]
    react/jsx-indent: [ 1, 4 ]
    react/jsx-no-undef: 0
    react/jsx-pascal-case: [ 1, { allowAllCaps: true } ]
    react/jsx-tag-spacing: 1
    react/jsx-uses-react: 1
    react/jsx-wrap-multilines: 1
    react/prop-types: 0
    react/sort-comp: 1

    jsx-control-statements/jsx-if-require-condition: 2
    jsx-control-statements/jsx-jcs-no-undef: 2
    jsx-control-statements/jsx-choose-not-empty: 1
    jsx-control-statements/jsx-for-require-each: 1
    jsx-control-statements/jsx-for-require-of: 1
    jsx-control-statements/jsx-otherwise-once-last: 1
    jsx-control-statements/jsx-when-require-condition: 1
    jsx-control-statements/jsx-use-if-tag: 0
